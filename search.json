[{"path":"https://docs.ropensci.org/clifro/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/clifro/articles/cfStation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Working with *clifro* Stations","text":"two functions available clifro create requisite cfStation objects send queries retrieve data via clifro. first one search stations using cf_find_station function detailed choose stations vignette. function creates cfStation objects cf_station function requires comma separated agent numbers input. vignette covers construction cfStation object via cf_station function, shows examples plotting visualising station’s locations using KML files within R using ggmap package.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/cfStation.html","id":"creating-a-cfstation-object-from-agent-numbers","dir":"Articles","previous_headings":"","what":"Creating a cfStation object from agent numbers","title":"Working with *clifro* Stations","text":"simplest method create cfStation object, simply supply cf_station function comma separated agent numbers. following stations () located around Lake Tekapo Canterbury, South Island New Zealand: Coal (Ski Field) Macaulay (Mt Gerald) South Opua Mount John Lake Tekapo Ews Godley Peaks Lilybank can see subsetting lake.tekapo.st acts just like data.frame object, although technically cfStation object. common data.frame methods work cfStation objects.","code":"lake.tekapo.st = cf_station(12709, 35567, 39557, 4630, 24945, 4616, 4602) lake.tekapo.st[, c(\"name\", \"agent\", \"start\", \"end\", \"open\")] ##                      name agent      start                 end  open ## 1         Coal @ Skifield 12709 1989-02-01 2020-09-01 02:00:00  TRUE ## 2      Macaulay@Mt Gerald 35567 1990-07-04 2020-09-01 02:00:00  TRUE ## 3         Lake Tekapo Ews 24945 2003-06-18 2020-09-01 02:00:00  TRUE ## 4 South Opua @ South Opua 39557 2011-09-28 2020-09-01 02:00:00  TRUE ## 5        Lilybank Station  4602 1950-01-01 1992-09-30 00:00:00 FALSE ## 6                 Mt John  4630 1962-10-01 1988-01-01 00:00:00 FALSE ## 7    Godley Peaks, Tekapo  4616 1914-01-01 1976-06-01 00:00:00 FALSE"},{"path":"https://docs.ropensci.org/clifro/articles/cfStation.html","id":"adding-more-stations","dir":"Articles","previous_headings":"Creating a cfStation object from agent numbers","what":"Adding more stations","title":"Working with *clifro* Stations","text":"add stations list addition sign used. repeated stations removed resulting list ordered end dates first stations’ start dates. code chunk adds 7 stations around Lake Tekapo, subscription-free reefton EWS station (cf_station()), stations presumably located (currently historically) near lighthouse. Allowing multiple searches currently available using web portal, CliFlo, code demonstrates easy can clifro.","code":"added.stations.st = lake.tekapo.st +    cf_station() +    cf_find_station(\"lighthouse\", status = \"all\") added.stations.st[, c(\"name\", \"agent\", \"start\", \"end\", \"open\")] ##                       name agent      start        end  open ## 1              Reefton Ews  3925 1960-08-01 2020-09-01  TRUE ## 2          Coal @ Skifield 12709 1989-02-01 2020-09-01  TRUE ## 3       Macaulay@Mt Gerald 35567 1990-07-04 2020-09-01  TRUE ## 4          Lake Tekapo Ews 24945 2003-06-18 2020-09-01  TRUE ## 5  South Opua @ South Opua 39557 2011-09-28 2020-09-01  TRUE ## 6     Tiri Tiri Lighthouse  1401 1946-02-01 2020-08-31  TRUE ## 7  Kapoaiaia At Lighthouse 42673 1998-05-17 2020-08-31  TRUE ## 8        Orakei Lighthouse 44394 2020-05-01 2020-08-31  TRUE ## 9     Rangitoto Lighthouse 44400 2020-05-01 2020-08-31  TRUE ## 10        Lilybank Station  4602 1950-01-01 1992-09-30 FALSE ## 11                 Mt John  4630 1962-10-01 1988-01-01 FALSE ## 12   Cape Brett Lighthouse  1197 1934-11-01 1978-10-01 FALSE ## 13     Nugget Lighthouse B  5894 1975-03-01 1977-08-31 FALSE ## 14     Nugget Lighthouse A  5895 1975-03-01 1977-08-31 FALSE ## 15    Godley Peaks, Tekapo  4616 1914-01-01 1976-06-01 FALSE ## 16      Moeraki Lighthouse  5325 1935-10-01 1975-06-01 FALSE"},{"path":"https://docs.ropensci.org/clifro/articles/cfStation.html","id":"visualising-the-station-locations","dir":"Articles","previous_headings":"","what":"Visualising the station locations","title":"Working with *clifro* Stations","text":"CliFlo currently visualisation tools aid selection stations can make task choosing geographically suitable stations hard one.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/cfStation.html","id":"using-kml-files","dir":"Articles","previous_headings":"Visualising the station locations","what":"Using KML files","title":"Working with *clifro* Stations","text":"cf_save_kml functionality introduced choose stations vignette function can used cfStation object. return KML file showing stations within added.stations.st object just run cf_save_kml(added.stations.st) R KML file returned. Climate stations greater Auckland region.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Choosing a *clifro* Datatype","text":"cf_datatype function required select clifro datatypes. function can called without arguments takes user interactive menus, otherwise datatypes may chosen programmatically menu options known advance. Whether intention choose one datatype many, vignette details various methods choosing .","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"using-the-menus-interactively-to-choose-a-datatype","dir":"Articles","previous_headings":"","what":"Using the menus interactively to choose a datatype","title":"Choosing a *clifro* Datatype","text":"familiar cliflo datatype selection menu recall myriad datatypes options available National Climate Database. Selection datatype requires navigation trees menus, check boxes combo boxes. cf_datatype function mimics (tedious) behaviour default, .e. arguments passed function datatypes, menus options identical (actually scraped ) datatype selection menu.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"a-minimal-example","dir":"Articles","previous_headings":"Using the menus interactively to choose a datatype","what":"A minimal example","title":"Choosing a *clifro* Datatype","text":"Let’s say datatype interested 9am surface wind knots.","code":"surfaceWind.dt = cf_datatype()  # If you prefer pointing and clicking - turn the graphics option on: surfaceWind.dt = cf_datatype(graphics = TRUE)"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"daily-and-hourly-observations","dir":"Articles","previous_headings":"Using the menus interactively to choose a datatype > A minimal example","what":"Daily and Hourly Observations","title":"Choosing a *clifro* Datatype","text":"first menu appears line code run R ‘Daily Hourly Observations’. interested ‘Wind’, therefore type number selection (select using mouse graphics = TRUE), case option 2.","code":"## Daily and Hourly Observations ##  ## 1: Combined Observations ## 2: Wind ## 3: Precipitation ## 4: Temperature and Humidity ## 5: Sunshine and Radiation ## 6: Weather ## 7: Pressure ## 8: Clouds ## 9: Evaporation / soil moisture"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"submenu-for-the-given-datatype","dir":"Articles","previous_headings":"Using the menus interactively to choose a datatype > A minimal example","what":"Submenu for the given datatype","title":"Choosing a *clifro* Datatype","text":"next menu prompts us type wind interested , case interested surface wind option 1.","code":"## Wind ##  ## 1: Surface wind ## 2: Max Gust"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"options-for-the-given-datatype","dir":"Articles","previous_headings":"Using the menus interactively to choose a datatype > A minimal example","what":"Options for the given datatype","title":"Choosing a *clifro* Datatype","text":"next menu options chosen datatype, may choose one. one option given datatype sought, options must chosen one time. made possible menu prompting whether like select another datatype every time option chosen. interested surface wind 9am example therefore don’t choose another option choose option 4.","code":"## Surface wind options ##  ## 1: WindRun ## 2: HlyWind ## 3: 3HlyWind ## 4: 9amWind ## Choose another option? ##  ## 1: yes ## 2: no"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"final-options","dir":"Articles","previous_headings":"Using the menus interactively to choose a datatype > A minimal example","what":"Final options","title":"Choosing a *clifro* Datatype","text":"final options menu typically associated units datatype (although always) sometimes necessary, depending datatype. example final menu prompts us units interested choose option 3. surface wind datatype associated options now saved R object called surfaceWind.dt.","code":"## Units ##  ## 1: m/s ## 2: km/hr ## 3: knots surfaceWind.dt ##     dt.name      dt.type dt.options dt.combo ## dt1    Wind Surface wind  [9amWind]    knots"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"choosing-a-datatype-without-the-menus","dir":"Articles","previous_headings":"","what":"Choosing a datatype without the menus","title":"Choosing a *clifro* Datatype","text":"bold numbers minimal example emphasised specifically show menu order selections needed choose strength 9am surface wind knots datatype, .e. 2 \\(\\rightarrow\\) 1 \\(\\rightarrow\\) 4 \\(\\rightarrow\\) 3. general, know selections needed four menus can choose datatype without using menus making datatype selection lot faster much less tedious.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"a-minimal-example-1","dir":"Articles","previous_headings":"Choosing a datatype without the menus","what":"A minimal example","title":"Choosing a *clifro* Datatype","text":"repeat minimal example without use menus just pass arguments cf_datatype function. arguments selections four menus (order) separated comma.","code":"surfaceWind.dt = cf_datatype(2, 1, 4, 3) surfaceWind.dt ##     dt.name      dt.type dt.options dt.combo ## dt1    Wind Surface wind  [9amWind]    knots"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"selecting-more-than-one-option-for-a-given-datatype","dir":"Articles","previous_headings":"Choosing a datatype without the menus","what":"Selecting more than one option for a given datatype","title":"Choosing a *clifro* Datatype","text":"Recall may choose one option third menu, equivalent check boxes cliflo database query form. Using menu choose one option iterative process however can just update third function argument deal time-efficient manner. surfaceWind.dt now contains surface wind datatype (knots) 9am wind hourly wind. Notice function arguments remain .","code":"surfaceWind.dt = cf_datatype(2, 1, c(2, 4), 3) surfaceWind.dt ##     dt.name      dt.type         dt.options dt.combo ## dt1    Wind Surface wind [HlyWind, 9amWind]    knots"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"selecting-multiple-datatypes","dir":"Articles","previous_headings":"","what":"Selecting multiple datatypes","title":"Choosing a *clifro* Datatype","text":"applications involving environmental data contained within National Climate Database require selection one option one datatype. true advantages using clifro package become apparent.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"an-extended-example","dir":"Articles","previous_headings":"Selecting multiple datatypes","what":"An extended example","title":"Choosing a *clifro* Datatype","text":"Let us consider application now interested hourly 9am surface wind along hourly daily rainfall, hourly counts lightning flashes daily hourly grass temperature extremes. ways choose datatypes. Firstly, go menu options one one, selecting corresponding datatypes options saving resulting datatypes different R objects. less laborious alternative create datatypes without menus. course assume know selections branch datatype selection menus. results 4 separate objects R containing datatypes corresponding options. wanting submit query using datatypes , four separate datatypes less optimal. following table shows options menus interested . can read across columns see selections needed return R object containing datatypes interested . can just pass values cf_datatype function return single R object containing datatypes options. can also easily combine separate cfDatatype objects R using addition symbol +, produce identical result. may useful want conduct multiple queries include subset datatypes.","code":"# Hourly and 9am surface wind (knots) surfaceWind.dt = cf_datatype(2, 1, c(2, 4), 3) surfaceWind.dt ##     dt.name      dt.type         dt.options dt.combo ## dt1    Wind Surface wind [HlyWind, 9amWind]    knots # Hourly and daily rainfall rainfall.dt = cf_datatype(3, 1, c(1, 2)) rainfall.dt ##           dt.name              dt.type       dt.options dt.combo ## dt1 Precipitation Rain (fixed periods) [Daily , Hourly] # Hourly counts of lightning flashes lightning.dt = cf_datatype(6, 1, 1) lightning.dt ##     dt.name   dt.type dt.options dt.combo ## dt1 Weather Lightning     [Ltng] # Daily and hourly grass temperature extremes temperatureExtremes.dt = cf_datatype(4, 2, c(5, 6)) temperatureExtremes.dt  # Note: only the surface wind datatype requires combo options ##                      dt.name      dt.type           dt.options dt.combo ## dt1 Temperature and Humidity Max_min_temp [DlyGrass, HlyGrass] query1.dt = cf_datatype(c(2, 3, 6, 4),                          c(1, 1, 1, 2),                         list(c(2, 4), c(1, 2), 1, c(5, 6)),                         c(3, NA, NA, NA)) query1.dt ##                      dt.name              dt.type           dt.options dt.combo ## dt1                     Wind         Surface wind   [HlyWind, 9amWind]    knots ## dt2            Precipitation Rain (fixed periods)     [Daily , Hourly]          ## dt3                  Weather            Lightning               [Ltng]          ## dt4 Temperature and Humidity         Max_min_temp [DlyGrass, HlyGrass] query1.dt = surfaceWind.dt + rainfall.dt + lightning.dt +    temperatureExtremes.dt query1.dt ##                      dt.name              dt.type           dt.options dt.combo ## dt1                     Wind         Surface wind   [HlyWind, 9amWind]    knots ## dt2            Precipitation Rain (fixed periods)     [Daily , Hourly]          ## dt3                  Weather            Lightning               [Ltng]          ## dt4 Temperature and Humidity         Max_min_temp [DlyGrass, HlyGrass]"},{"path":"https://docs.ropensci.org/clifro/articles/choose-datatype.html","id":"extras","dir":"Articles","previous_headings":"Selecting multiple datatypes","what":"Extras","title":"Choosing a *clifro* Datatype","text":"","code":"# To add another datatype using the menu: query1.dt + cf_datatype()  # Is equivalent to: query1.dt + cf_datatype(NA, NA, NA, NA)  # Therefore is equivalent to adding a column of NA's to the above table: query1.dt = cf_datatype(c(2, 3, 6, 4, NA),                                c(1, 1, 1, 2, NA),                               list(c(2, 4), c(1, 2), 1, c(5, 6), NA),                               c(3, NA, NA, NA, NA))  # Half an unknown wind datatype i.e. we know first selection = 2 but nothing  # further: rain.dt = cf_datatype(2) # Or cf_datatype(2, NA, NA, NA)"},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Choosing a *clifro* Station","text":"Choosing clifro stations made easy single cf_find_station function. function required find clifro stations. function equivalent conducting search find stations page conducting query online CliFlo, except without errors bugs. means searches types searches possible exactly however, clifro extends functionality exploring spatial nature stations via KML files, plotting directly R. main advantage searching stations using clifro locating suitable stations map generally preferred search tool. four possible types searches: search based pattern matching station name search based pattern matching network ID search based region search based vicinity given location searches either , open closed stations may returned searches also may return stations given datatypes available. primary goal searching stations find unique station agent number required create cfStation object. vignette details various search options clifro ways find requisite agent numbers, primarily way example.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"ignoring-datatypes","dir":"Articles","previous_headings":"","what":"Ignoring datatypes","title":"Choosing a *clifro* Station","text":"following examples detail use cf_find_station search function ignoring datatypes.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"station-name-search","dir":"Articles","previous_headings":"Ignoring datatypes","what":"Station name search","title":"Choosing a *clifro* Station","text":"searches use pattern matching find appropriate stations. station name search useful searching stations certain towns suburbs maybe even streets parks. network ID number assigned stations makes search useful look stations known. searches used part station name network ID known. example, consider looking open stations located Takaka, southeastern end Golden Bay northern end South Island, New Zealand. default cf_find_station function search open station names matching string. time writing , CliFlo ignores status argument name network ID search whereas clifro . Searching open stations station name matching “takaka” CliFlo return stations. shows 8 17 stations closed. search clifro ignore station status. Stations considered open clifro final date returned search within four weeks current date. gives user better idea stations currently collecting data.","code":"# Equivalent to searching for status = \"open\" on CliFro # Note the search string is not case sensitive cf_find_station(\"takaka\", status = \"all\") ##                      name network agent      start        end  open distance ## 1)   Takaka, Kotinga Road  F02882  3788 1970-08-01 2020-08-18  TRUE       NA ## 2)  Riwaka At Takaka Hill  O12090 44046 1980-01-10 2020-08-18  TRUE       NA ## 3)          Takaka Pohara  F02884  3790 1986-07-01 2020-08-18  TRUE       NA ## 4)     Takaka At Harwoods  F15292 44050 1988-01-25 2020-08-18  TRUE       NA ## 5)      Takaka At Kotinga  F15291 44051 1992-04-24 2020-08-18  TRUE       NA ## 6)        Takaka @ Canaan  F0299A 44072 1994-02-01 2020-08-18  TRUE       NA ## 7)         Upper Takaka 2  F12083 11519 1995-07-12 2020-08-18  TRUE       NA ## 8)             Takaka Ews  F02885 23849 2002-04-30 2020-08-18  TRUE       NA ## 9)       Takaka Aero Raws  O00957 41196 2015-08-12 2020-08-18  TRUE       NA ## 10)     Takaka, Kotinga 2  F02883  3789 1985-11-30 2012-07-01 FALSE       NA ## 11)          Upper Takaka  F12082  7316 1991-10-31 1992-10-31 FALSE       NA ## 12)    Takaka,Patons Rock  F02772  3779 1969-10-01 1975-01-01 FALSE       NA ## 13)      Takaka,Kotinga 1  F02971  3794 1961-12-01 1971-08-01 FALSE       NA ## 14)           Takaka Aero  F02871  3785 1936-11-01 1970-04-01 FALSE       NA ## 15)           Takaka Hill  F12081  3833 1947-09-01 1959-11-01 FALSE       NA ## 16)          Takaka,Bu Bu  F02872  3786 1933-04-01 1945-11-30 FALSE       NA ## 17)                Takaka  F02881  3787 1904-01-01 1927-10-01 FALSE       NA ##           lat      lon ## 1)  -40.87200 172.8090 ## 2)  -41.03192 172.8444 ## 3)  -40.84500 172.8670 ## 4)  -41.03094 172.7980 ## 5)  -40.87068 172.8080 ## 6)  -40.93987 172.9082 ## 7)  -41.01516 172.8258 ## 8)  -40.86364 172.8057 ## 9)  -40.81531 172.7765 ## 10) -40.88200 172.8010 ## 11) -41.05100 172.8330 ## 12) -40.78900 172.7570 ## 13) -40.90000 172.7750 ## 14) -40.81600 172.7720 ## 15) -41.01700 172.8670 ## 16) -40.85000 172.7330 ## 17) -40.81700 172.8000 cf_find_station(\"takaka\", status = \"open\") ##                     name network agent      start        end open distance ## 1)  Takaka, Kotinga Road  F02882  3788 1970-08-01 2020-08-18 TRUE       NA ## 2) Riwaka At Takaka Hill  O12090 44046 1980-01-10 2020-08-18 TRUE       NA ## 3)         Takaka Pohara  F02884  3790 1986-07-01 2020-08-18 TRUE       NA ## 4)    Takaka At Harwoods  F15292 44050 1988-01-25 2020-08-18 TRUE       NA ## 5)     Takaka At Kotinga  F15291 44051 1992-04-24 2020-08-18 TRUE       NA ## 6)       Takaka @ Canaan  F0299A 44072 1994-02-01 2020-08-18 TRUE       NA ## 7)        Upper Takaka 2  F12083 11519 1995-07-12 2020-08-18 TRUE       NA ## 8)            Takaka Ews  F02885 23849 2002-04-30 2020-08-18 TRUE       NA ## 9)      Takaka Aero Raws  O00957 41196 2015-08-12 2020-08-18 TRUE       NA ##          lat      lon ## 1) -40.87200 172.8090 ## 2) -41.03192 172.8444 ## 3) -40.84500 172.8670 ## 4) -41.03094 172.7980 ## 5) -40.87068 172.8080 ## 6) -40.93987 172.9082 ## 7) -41.01516 172.8258 ## 8) -40.86364 172.8057 ## 9) -40.81531 172.7765"},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"station-network-id-search","dir":"Articles","previous_headings":"Ignoring datatypes","what":"Station network ID search","title":"Choosing a *clifro* Station","text":"can done searching stations using network ID although search = \"network\" needs added function call. Assume knew stations interested open stations whose network ID’s match F028. Notice resulting dataframes searches first ordered date last received data, date opened, return longest-running open stations first historic, closed stations last.","code":"cf_find_station(\"f028\", search = \"network\", status = \"all\") ##                           name network agent      start        end  open ## 1)        Takaka, Kotinga Road  F02882  3788 1970-08-01 2020-08-18  TRUE ## 2)               Takaka Pohara  F02884  3790 1986-07-01 2020-08-18  TRUE ## 3)                  Takaka Ews  F02885 23849 2002-04-30 2020-08-18  TRUE ## 4)  Aorere At Salisbury Bridge  F02854 44020 2011-07-26 2020-08-18  TRUE ## 5)           Takaka, Kotinga 2  F02883  3789 1985-11-30 2012-07-01 FALSE ## 6)            Nelson,Mckay Hut  F02821  3780 1983-04-01 1993-08-16 FALSE ## 7)               Gouland Downs  F02831  3781 1984-10-31 1993-08-16 FALSE ## 8)       Golden Bay,Table Hl I  F02852  3783 1977-06-01 1991-11-23 FALSE ## 9)       Golden Bay,Table Hl 2  F02853  3784 1977-06-01 1991-11-23 FALSE ## 10)                   Tarakohe  F02891  3791 1932-05-01 1989-01-01 FALSE ## 11)                Takaka Aero  F02871  3785 1936-11-01 1970-04-01 FALSE ## 12)                  Totaranui  F02892  3792 1957-01-01 1960-08-31 FALSE ## 13)               Takaka,Bu Bu  F02872  3786 1933-04-01 1945-11-30 FALSE ## 14)                     Takaka  F02881  3787 1904-01-01 1927-10-01 FALSE ## 15)              Quartz Ranges  F02851  3782 1901-01-01 1902-08-31 FALSE ##     distance       lat      lon ## 1)        NA -40.87200 172.8090 ## 2)        NA -40.84500 172.8670 ## 3)        NA -40.86364 172.8057 ## 4)        NA -40.80236 172.5333 ## 5)        NA -40.88200 172.8010 ## 6)        NA -40.89000 172.2130 ## 7)        NA -40.89200 172.3510 ## 8)        NA -40.80700 172.5560 ## 9)        NA -40.80700 172.5560 ## 10)       NA -40.82500 172.8980 ## 11)       NA -40.81600 172.7720 ## 12)       NA -40.82300 173.0020 ## 13)       NA -40.85000 172.7330 ## 14)       NA -40.81700 172.8000 ## 15)       NA -40.86700 172.5170"},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"return-all-stations-within-a-region","dir":"Articles","previous_headings":"Ignoring datatypes","what":"Return all stations within a region","title":"Choosing a *clifro* Station","text":"broad search returns , open closed stations within one 29 preselected New Zealand regions (note stations can belong one region). search = \"region\" argument must added cf_find_station function conduct searches. region unknown search argument may missing brings interactive menu 29 regions user select (cf_find_station(search = \"region\")), otherwise partial matching used. Typing open.queenstown.stations R return 264 open Queenstown stations. clearly burden choose stations based large list numbers hence plotting map (covered ) assess spatial extent make task much easier.","code":"# Partial match for the Queenstown region open.queenstown.stations = cf_find_station(\"queen\", search = \"region\")"},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"return-all-stations-within-the-vicinity-of-a-given-location","dir":"Articles","previous_headings":"Ignoring datatypes","what":"Return all stations within the vicinity of a given location","title":"Choosing a *clifro* Station","text":"location based search conducted including search = \"latlong\" argument cf_find_station function. three parameters needed search; latitude, longitude radius (kilometres). Just like function R, arguments aren’t named order matters written order specified . latitude longitude must given decimal degrees. (still) interested finding open stations around small town Takaka. GeoHack can see latitude -40.85 longitude 172.8. interested open stations within 10km radius main township.","code":"takaka.town.st = cf_find_station(lat = -40.85, long = 172.8, rad = 10, search = \"latlong\")  # Print the result, but remove the lat and lon columns to fit the page takaka.town.st[, -c(8, 9)] ##                         name network agent      start        end open distance ## 1       Takaka, Kotinga Road  F02882  3788 1970-08-01 2020-08-31 TRUE      2.6 ## 2              Takaka Pohara  F02884  3790 1986-07-01 2020-08-31 TRUE      5.7 ## 3      Anatoki At Happy Sams  F15293 44015 1990-10-31 2020-08-31 TRUE      5.8 ## 4          Takaka At Kotinga  F15291 44051 1992-04-24 2020-08-31 TRUE      2.4 ## 5                 Takaka Ews  F02885 23849 2002-04-30 2020-08-31 TRUE      1.6 ## 6 Motupiko At Reillys Bridge  F1529M 44041 2006-11-29 2020-08-31 TRUE      2.7 ## 7           Takaka Aero Raws  O00957 41196 2015-08-12 2020-08-31 TRUE      4.3 # We may rather order the stations by distance from the township takaka.town.st[order(takaka.town.st$distance), -c(8, 9)] ##                         name network agent      start        end open distance ## 5                 Takaka Ews  F02885 23849 2002-04-30 2020-08-31 TRUE      1.6 ## 4          Takaka At Kotinga  F15291 44051 1992-04-24 2020-08-31 TRUE      2.4 ## 1       Takaka, Kotinga Road  F02882  3788 1970-08-01 2020-08-31 TRUE      2.6 ## 6 Motupiko At Reillys Bridge  F1529M 44041 2006-11-29 2020-08-31 TRUE      2.7 ## 7           Takaka Aero Raws  O00957 41196 2015-08-12 2020-08-31 TRUE      4.3 ## 2              Takaka Pohara  F02884  3790 1986-07-01 2020-08-31 TRUE      5.7 ## 3      Anatoki At Happy Sams  F15293 44015 1990-10-31 2020-08-31 TRUE      5.8"},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"searches-based-on-datatypes","dir":"Articles","previous_headings":"","what":"Searches based on datatypes","title":"Choosing a *clifro* Station","text":"searches include datatype therefore ignore datatypes available stations. Imagine looking hourly rain data open station Takaka (using aforementioned searches), need include hourly rain datatype search return suitable station.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"note","dir":"Articles","previous_headings":"Searches based on datatypes","what":"Note","title":"Choosing a *clifro* Station","text":"Unless Reefton EWS station CliFlo station interest, user need CliFlo account get data stations. tells us open station Takaka hourly rain data available Takaka Ews station.","code":"# Create a clifro datatype for hourly rain hourly.rain.dt = cf_datatype(3, 1, 2) hourly.rain.dt ##           dt.name              dt.type dt.options dt.combo ## dt1 Precipitation Rain (fixed periods)   [Hourly] # Conduct the search cf_find_station(\"takaka\", datatype = hourly.rain.dt) ##          name network agent      start        end open distance ## 1) Takaka Ews  F02885 23849 2002-06-02 2020-08-16 TRUE       NA"},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"more-than-one-search-at-a-time","dir":"Articles","previous_headings":"","what":"More than one search at a time","title":"Choosing a *clifro* Station","text":"Since cf_find_station function returns cfStation objects, methods work objects created cf_station function (see working clifro stations vignette details). can conduct two searches time using addition sign, just like cfDatatypes (see choose datatypes vignette). like return open stations within 10km radius Takaka township South Island, open stations Kaitaia, North Island collect hourly rain data.","code":"my.composite.search = takaka.town.st + cf_find_station(\"kaitaia\",                                                         search = \"region\",                                                         datatype = hourly.rain.dt) my.composite.search ##                           name network agent      start        end open ## 1)        Takaka, Kotinga Road  F02882  3788 1970-08-01 2020-08-31 TRUE ## 2)               Takaka Pohara  F02884  3790 1986-07-01 2020-08-31 TRUE ## 3)       Anatoki At Happy Sams  F15293 44015 1990-10-31 2020-08-31 TRUE ## 4)           Takaka At Kotinga  F15291 44051 1992-04-24 2020-08-31 TRUE ## 5)                  Takaka Ews  F02885 23849 2002-04-30 2020-08-31 TRUE ## 6)  Motupiko At Reillys Bridge  F1529M 44041 2006-11-29 2020-08-31 TRUE ## 7)            Takaka Aero Raws  O00957 41196 2015-08-12 2020-08-31 TRUE ## 8)            Kaitaia Aero Ews  A53026 18183 2000-06-15 2020-08-30 TRUE ## 9)                Trounson Cws  A53762 37131 2009-06-04 2020-08-30 TRUE ## 10)                Russell Cws  A54212 41262 2016-04-05 2020-08-30 TRUE ## 11)                Kaikohe Aws  A53487  1134 1985-11-14 2020-08-29 TRUE ## 12)                Purerua Aws  A54101  1196 1995-01-01 2020-08-29 TRUE ## 13)            Cape Reinga Aws  A42462  1002 1995-01-01 2020-08-29 TRUE ## 14)     Kerikeri Aerodrome Aws  A53295 37258 2008-06-26 2020-08-29 TRUE ## 15)                Kaitaia Ews  A53127 17067 1998-12-17 2020-08-27 TRUE ## 16)           Dargaville 2 Ews  A53987 25119 2003-10-30 2020-08-22 TRUE ## 17)               Kerikeri Ews  A53191  1056 2002-06-28 2020-08-21 TRUE ##     distance       lat      lon ## 1)       2.6 -40.87200 172.8090 ## 2)       5.7 -40.84500 172.8670 ## 3)       5.8 -40.88587 172.7498 ## 4)       2.4 -40.87068 172.8080 ## 5)       1.6 -40.86364 172.8057 ## 6)       2.7 -40.85607 172.8316 ## 7)       4.3 -40.81531 172.7765 ## 8)        NA -35.06770 173.2874 ## 9)        NA -35.72035 173.6515 ## 10)       NA -35.26835 174.1360 ## 11)       NA -35.41720 173.8229 ## 12)       NA -35.12900 174.0150 ## 13)       NA -34.42963 172.6819 ## 14)       NA -35.26200 173.9110 ## 15)       NA -35.13352 173.2629 ## 16)       NA -35.93145 173.8532 ## 17)       NA -35.18300 173.9260 # How long have these stations been open for? transform(my.composite.search, ndays = round(end - start))[, c(1, 10)] ##                          name      ndays ## 1        Takaka, Kotinga Road 18293 days ## 2               Takaka Pohara 12480 days ## 3       Anatoki At Happy Sams 10897 days ## 4           Takaka At Kotinga 10356 days ## 5                  Takaka Ews  6698 days ## 6  Motupiko At Reillys Bridge  5024 days ## 7            Takaka Aero Raws  1846 days ## 8            Kaitaia Aero Ews  7381 days ## 9                Trounson Cws  4105 days ## 10                Russell Cws  1608 days ## 11                Kaikohe Aws 12707 days ## 12                Purerua Aws  9372 days ## 13            Cape Reinga Aws  9372 days ## 14     Kerikeri Aerodrome Aws  4447 days ## 15                Kaitaia Ews  7924 days ## 16           Dargaville 2 Ews  6141 days ## 17               Kerikeri Ews  6629 days"},{"path":"https://docs.ropensci.org/clifro/articles/choose-station.html","id":"so-where-are-these-stations","dir":"Articles","previous_headings":"","what":"So where are these stations?","title":"Choosing a *clifro* Station","text":"now probably hasn’t good reason choose clifro search stations instead ‘Choose Stations’ form CliFlo. However, real advantage using clifro visualise station locations map returning KML file, particularly lots stations returned search. Keyhole Markup Language (KML) XML-based language provided Google(TM) defining graphic display spatial data applications Google Earth(TM) Google Maps(TM). return stations KML file simply use cf_save_kml function cfStation object. cf_find_station function returns cfStation objects therefore ’s easy plot map. assess geographic extent Auckland stations can return KML file search open using preferred KML-friendly software. Now .auckland.st contains hundreds Auckland stations data recorded CliFlo. green markers represent open stations red markers indicate closed stations. resulting KML file saved current R session’s working directory default. look clifro station vignette methods plotting cfStation objects. Auckland Stations","code":"# First, search for the stations all.auckland.st = cf_find_station(\"auckland\", search = \"region\", status = \"all\") # Then save these as a KML cf_save_kml(all.auckland.st, file_name = \"all_auckland_stations\")"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"From CliFlo to *clifro*: An Introduction","text":"National Climate Database holds climate data around 6,500 climate stations around New Zealand including offshore Pacific Islands. 600 stations currently active still receiving valuable climate data. CliFlo web interface database managed NIWA, allowing users submit queries retrieve ten-minute, hourly, daily summary data. use CliFlo free given user subscribed accepted NIWA’s terms conditions. clifro package designed make CliFlo queries much simpler provide extensions currently offered CliFlo. intention simplify data extraction, manipulation, exploration visualisation processes easily create publication-worthy graphics primary datatypes, especially users limited non-existent previous R experience. Experienced useRs also find package helpful maximising efficiency climate data integration R analysis, modelling export. vignette provides introduction clifro package demonstrating primary functionality way example. information functions clifro package user referred help index clifro package, help(package = \"clifro\").","code":""},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"create-a-clifro-user","dir":"Articles","previous_headings":"","what":"Create a clifro User","title":"From CliFlo to *clifro*: An Introduction","text":"stated , intention extract data station Reefton Ews (subscription-free) maximise potential clifro, valid subscription needed. cf_user function required create valid clifro user, username password substituted user’s CliFlo credentials.","code":"me = cf_user(\"username\", \"password\")"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"create-clifro-datatypes","dir":"Articles","previous_headings":"","what":"Create clifro Datatypes","title":"From CliFlo to *clifro*: An Introduction","text":"user authenticated, next step choose datatypes interest, see choose datatypes vignette details choosing datatypes. example interested daily MSL atmospheric pressure, minimum maximum temperature extremes (deg C), daily rainfall (mm) daily surface wind. (m/s).","code":"my.dts = cf_datatype(select_1 =     c(7,  4,  3,  2),                       select_2 =     c(1,  2,  1,  1),                       check_box = list(3,  1,  1,  4),                       combo_box =    c(NA, NA, NA, 1)) my.dts ##                      dt.name              dt.type    dt.options dt.combo ## dt1                 Pressure             Pressure      [9amMSL]          ## dt2 Temperature and Humidity         Max_min_temp [DailyMaxMin]          ## dt3            Precipitation Rain (fixed periods)      [Daily ]          ## dt4                     Wind         Surface wind     [9amWind]      m/s"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"create-clifro-stations","dir":"Articles","previous_headings":"","what":"Create clifro Stations","title":"From CliFlo to *clifro*: An Introduction","text":"third requisite valid clifro query station data collected. agent numbers required CliFlo stations known, function needed create clifro station cfStation object cf_station. See choose station vignette help choosing stations agent numbers unknown, working clifro stations vignette information methods cfStation objects. example interested assessing datatypes differ various parts country taking selection stations various regions. include station Invercargill (5814), Nelson (4241), Hamilton (2112) Auckland (1962)","code":"my.stations = cf_station(5814, 4241, 2112, 1962) my.stations[, 1:5] ##                name network agent      start                 end ## 1 Invercargill Aero  I68433  5814 1939-09-01 2020-08-18 02:00:00 ## 2       Nelson Aero  G13222  4241 1940-07-01 2020-08-18 02:00:00 ## 3     Auckland Aero  C74082  1962 1962-05-01 2020-08-18 02:00:00 ## 4      Hamilton Aws  C75834  2112 1989-11-30 2020-08-18 02:00:00"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"retrieve-the-cliflo-data","dir":"Articles","previous_headings":"","what":"Retrieve the CliFlo Data","title":"From CliFlo to *clifro*: An Introduction","text":"Now valid clifro user datatypes stations interest, clifro query can conducted using cf_query function. interested available data 2012 2014. can see pressure surface wind data span one year.","code":"cf.datalist = cf_query(user = me,                         datatype = my.dts,                         station = my.stations,                         start_date = \"2012-01-01 00\",                         end_date = \"2014-01-01 00\") cf.datalist ## List containing clifro data frames: ##               data      type              start                end rows ## df 1)     Pressure  9am only (2012-01-01  9:00) (2013-01-01  9:00) 1468 ## df 2)      Max_min     Daily (2012-01-01  9:00) (2013-12-31  9:00) 2923 ## df 3)         Rain     Daily (2012-01-01  9:00) (2013-12-31  9:00) 2923 ## df 4) Surface Wind  9am only (2012-01-01  9:00) (2013-01-01  9:00) 1468"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"plot-the-cliflo-data","dir":"Articles","previous_headings":"","what":"Plot the CliFlo Data","title":"From CliFlo to *clifro*: An Introduction","text":"now list 4 dataframes R containing available data stations datatypes chosen . plotting simply done call plot, type plot plotting options depends datatype. See ?'plot.cfDataList' details default clifro plotting. following examples plots possible clifro, note optional ggtheme argument changes look plots.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"msl-atmospheric-pressure","dir":"Articles","previous_headings":"Plot the CliFlo Data","what":"MSL Atmospheric Pressure","title":"From CliFlo to *clifro*: An Introduction","text":"first dataframe cf.datalist. Since first argument passed plot list different datatypes (cfDataList), second argument (y) tells plot method four dataframes plot. therefore simply type plot(cf.datalist, y = 1) get nice plot MSL atmospheric pressure, usually nice modify defaults slightly. Since plot method returns ggplot object, can easily modify plots using ggplot2. Improved MSL Atmospheric Pressure","code":"# Load the ggplot2 library for element_text() and geom_smooth() functions library(ggplot2)  # Increase the text size to 16pt and add a loess smoother with a span equal to a  # quarter of the window plot(cf.datalist, ggtheme = \"bw\", text = element_text(size = 16)) +    geom_smooth(method = \"loess\", span = 1/4)"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"daily-temperature-extremes","dir":"Articles","previous_headings":"Plot the CliFlo Data","what":"Daily Temperature Extremes","title":"From CliFlo to *clifro*: An Introduction","text":"second dataframe cf.datalist, therefore y = 2. temperature data showing air temperature extremes four stations, represented grey region plot. Note average temperature available, plotted . Temperature Extremes","code":"# Try a different ggtheme plot(cf.datalist, 2, ggtheme = \"linedraw\")"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"rain","dir":"Articles","previous_headings":"Plot the CliFlo Data","what":"Rain","title":"From CliFlo to *clifro*: An Introduction","text":"third dataframe cf.datalist, therefore y = 3. Currently two possible default plots available rainfall; without soil deficit/runoff. Rain Soil Deficit Runoff","code":"# Try yet another ggtheme plot(cf.datalist, 3, ggtheme = \"light\")  # Or only plot the rainfall data # plot(cf.datalist, 3, ggtheme = \"light\", include_runoff = FALSE)"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"wind","dir":"Articles","previous_headings":"Plot the CliFlo Data","what":"Wind","title":"From CliFlo to *clifro*: An Introduction","text":"three types plots available wind data clifro. default plot windrose displaying wind speed directions full time series station. windrose function clifro also available user plot directional data - see ?windrose. two optional plots wind data clifro wind speed wind direction plots. plots display wind speed direction patterns time, adding valuable temporal information portrayed windroses. wind datatype fourth dataframe cf.datalist, therefore y = 4.","code":""},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"windrose","dir":"Articles","previous_headings":"Plot the CliFlo Data > Wind","what":"Windrose","title":"From CliFlo to *clifro*: An Introduction","text":"Windrose","code":"# Defaults to windrose plot(cf.datalist, 4, n_col = 2)"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"wind-speeds-and-directions","dir":"Articles","previous_headings":"Plot the CliFlo Data > Wind","what":"Wind Speeds and Directions","title":"From CliFlo to *clifro*: An Introduction","text":"two plotting methods wind data speed_plot direction_plot functions assess temporal variability wind (plots shown).","code":"# Plot the wind speeds through time, choose the 'classic' ggtheme and # allow the y-axis scales to differ for each station speed_plot(cf.datalist, 4, ggtheme = \"classic\", scales = \"free_y\")  # Plot wind direction contours through time direction_plot(cf.datalist, 4, n_col = 2)"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"data-export","dir":"Articles","previous_headings":"","what":"Data Export","title":"From CliFlo to *clifro*: An Introduction","text":"","code":"# Export the data as separate CSV files to the current working directory for (i in seq_along(cf.datalist))   write.csv(cf.datalist[i],              file = tempfile(paste0(cf.datalist[i]@dt_name, \"_\"),                              tmpdir = normalizePath(\".\"),                              fileext = \".csv\"),             na = \"\", row.names = FALSE)  # Each dataset is saved separately here: getwd()"},{"path":"https://docs.ropensci.org/clifro/articles/clifro.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"From CliFlo to *clifro*: An Introduction","text":"primary aim package make substantial amount climate data residing within National Climate Database accessible easier work . clifro package many advantages using CliFlo web portal including conducting searches much efficiently, examining spatial extent stations enabling high quality plots aid data exploration analysis stage.","code":""},{"path":"https://docs.ropensci.org/clifro/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Blake Seers. Author, maintainer.","code":""},{"path":"https://docs.ropensci.org/clifro/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Seers B, Shears N (2015). “New Zealand's Climate Data R — Introduction clifro.” University Auckland, Auckland, New Zealand. http://stattech.wordpress.fos.auckland.ac.nz/2015-02-new-zealands-climate-data--r--introduction--clifro/.","code":"@TechReport{,   title = {New Zealand's Climate Data in R --- An Introduction to clifro},   author = {Blake Seers and Nick Shears},   institution = {The University of Auckland},   address = {Auckland, New Zealand},   year = {2015},   url = {http://stattech.wordpress.fos.auckland.ac.nz/2015-02-new-zealands-climate-data-in-r-an-introduction-to-clifro/}, }"},{"path":"https://docs.ropensci.org/clifro/index.html","id":"enhancing-the-national-climate-database-with-clifro","dir":"","previous_headings":"","what":"Easily Download and Visualise Climate Data from CliFlo","title":"Easily Download and Visualise Climate Data from CliFlo","text":"New Zealand’s National Climate Database, CliFlo holds data 6500 climate stations, observations dating back 1850. CliFlo returns raw data ten minute, hourly, daily frequencies. CliFlo also returns statistical summaries, inclusive eighty different types monthly annual statistics six types thirty−year normals. clifro package designed minimise hassle downloading data CliFlo. providing functions user log , easily choose appropriate datatypes stations, query database. data downloaded, stored specific objects R primary aim ensure data visualisation exploration done minimal effort maximum efficiency. package extends functionality CliFlo returning stations resulting simultaneous searches, ability visualise climate stations exporting KML files, elegant plotting climate data. vignettes help files written intention even inexperienced R users can use clifro easily. Exporting climate data R fairly easy experienced useRs, automated updating spreadsheets databases can made much easier.","code":""},{"path":"https://docs.ropensci.org/clifro/index.html","id":"free-cliflo-subscription","dir":"","previous_headings":"","what":"Free CliFlo Subscription","title":"Easily Download and Visualise Climate Data from CliFlo","text":"current CliFlo subscription recommended clifro, otherwise data one station available. subscription free lasts 2 years 2,000,000 rows without renewal, enables access around 6,500 climate stations around New Zealand Pacific. Note package requires internet access connecting National Climate Database web portal.","code":""},{"path":"https://docs.ropensci.org/clifro/index.html","id":"installation-in-r","dir":"","previous_headings":"","what":"Installation in R","title":"Easily Download and Visualise Climate Data from CliFlo","text":"","code":"# Install the latest CRAN release install.packages(\"clifro\")  # Or the latest development version if(!require(devtools))   install.packages(\"devtools\") devtools::install_github(\"ropensci/clifro\")  # Then load the package library(clifro)"},{"path":"https://docs.ropensci.org/clifro/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Easily Download and Visualise Climate Data from CliFlo","text":"following small example shows core functionality clifro.","code":""},{"path":"https://docs.ropensci.org/clifro/index.html","id":"where-are-the-climate-stations","dir":"","previous_headings":"","what":"Where are the climate stations?","title":"Easily Download and Visualise Climate Data from CliFlo","text":"can search climate stations anywhere New Zealand return station information form KML file. example, can return climate stations (current historic) greater Auckland region. Auckland Climate Stations Note open stations green markers closed stations red markers.","code":"all.auckland.st = cf_find_station(\"Auckland\", search = \"region\", status = \"all\") cf_save_kml(all.auckland.st, \"all_auckland_stations\")"},{"path":"https://docs.ropensci.org/clifro/index.html","id":"download-and-visualise-public-climate-data","dir":"","previous_headings":"","what":"Download and visualise public climate data","title":"Easily Download and Visualise Climate Data from CliFlo","text":"station available unlimited public access climate data Reefton electronic weather station (EWS). can download 2014 wind rain data easily visualise results easily.   details reproducible examples, see technical report use clifro, including choosing datatypes, stations, saving locations KML files easy, elegant plotting various different climate weather data.","code":"public.cfuser = cf_user()  # Choose the datatypes daily.wind.rain.dt = cf_datatype(c(2, 3), c(1, 1), list(4, 1), c(1, NA))  # Choose the Reefton EWS station reefton.st = cf_station()  # Send the query to CliFlo and retrieve the data daily.datalist = cf_query(user = public.cfuser,                            datatype = daily.wind.rain.dt,                            station = reefton.st,                           start_date = \"2012-01-01 00\",                           end_date = \"2013-01-01 00\") #> connecting to CliFlo... #> reading data... #> UserName is = public #> Number of charged rows output = 0 #> Number of free rows output = 732 #> Total number of rows output = 732 #> Copyright NIWA 2020 Subject to NIWA's Terms and Conditions #> See: http://clifloecd1.niwa.co.nz/pls/niwp/doc/terms.html #> Comments to: cliflo@niwa.co.nz  # Have a look at what data is now available daily.datalist #> List containing clifro data frames: #>               data      type              start                end rows #> df 1) Surface Wind  9am only (2012-01-01  9:00) (2012-12-31  9:00)  366 #> df 2)         Rain     Daily (2012-01-01  9:00) (2012-12-31  9:00)  366  # Plot the data using default plotting methods plot(daily.datalist)     # For the first dataframe  (Surface Wind) plot(daily.datalist, 2)  # For the second dataframe (Rain) # View the clifro demo demo(clifro)  # Read the 'Introduction to clifro' vignette vignette(\"clifro\")"},{"path":"https://docs.ropensci.org/clifro/index.html","id":"contributor-code-of-conduct","dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Easily Download and Visualise Climate Data from CliFlo","text":"clifro package released contributor code conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/clifro/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Easily Download and Visualise Climate Data from CliFlo","text":"","code":"To cite package ‘clifro’ in publications use:  Seers B and Shears N (2015). “New Zealand's Climate Data in R - An Introduction to clifro.” The University of Auckland, Auckland, New Zealand. <URL: https://stattech.wordpress.fos.auckland.ac.nz/2015/03/25/2015-02-new-zealands-climate-data-in-r-an-introduction-to-clifro/>.  A BibTeX entry for LaTeX users is    @TechReport{,     title = {New Zealand's Climate Data in R --- An Introduction to clifro},     author = {Blake Seers and Nick Shears},     institution = {The University of Auckland},     address = {Auckland, New Zealand},     year = {2015},     url = {https://stattech.wordpress.fos.auckland.ac.nz/2015/03/25/2015-02-new-zealands-climate-data-in-r-an-introduction-to-clifro/},   }"},{"path":"https://docs.ropensci.org/clifro/reference/Extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting Methods for Clifro Objects — [[,dataFrame-method","title":"Subsetting Methods for Clifro Objects — [[,dataFrame-method","text":"Operators acting cfDataList, cfDatatype, cfStation, dataFrame objects.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/Extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting Methods for Clifro Objects — [[,dataFrame-method","text":"","code":"# S4 method for dataFrame [[(x, i)  # S4 method for dataFrame,ANY,ANY,ANY [(x, i, j, drop)  # S4 method for dataFrame $(x, name)  # S4 method for cfStation,ANY,ANY,ANY [(x, i, j, drop = TRUE)  # S4 method for cfDataList,ANY,ANY,ANY [(x, i, j)  # S4 method for cfDataList [[(x, i)  # S4 method for cfDatatype,ANY,missing,missing [(x, i, j, drop)"},{"path":"https://docs.ropensci.org/clifro/reference/Extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsetting Methods for Clifro Objects — [[,dataFrame-method","text":"x clifro object indices specifying elements extract. Indices numeric character vectors empty (missing) NULL. Character vectors matched names object. j indices specifying elements extract. Indices numeric character vectors empty (missing) NULL. Character vectors matched names object. drop TRUE, result coerced lowest possible dimension. See drop details. name literal character string. partially matched names object.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/Extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subsetting Methods for Clifro Objects — [[,dataFrame-method","text":"methods generic operators classes within clifro. intended give user familiar functionality subsetting data.frame objects.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfDatatype-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The Clifro Datatype Object — cfDatatype-class","title":"The Clifro Datatype Object — cfDatatype-class","text":"Create cfDatatype object selecting one CliFlo datatypes build clifro query.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfDatatype-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Clifro Datatype Object — cfDatatype-class","text":"","code":"cf_datatype(   select_1 = NA,   select_2 = NA,   check_box = NA,   combo_box = NA,   graphics = FALSE )"},{"path":"https://docs.ropensci.org/clifro/reference/cfDatatype-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Clifro Datatype Object — cfDatatype-class","text":"select_1 numeric vector first node selections select_2 numeric vector second node selections check_box list containing check box selections combo_box numeric vector containing combo box selection (applicable) graphics logical indicating whether graphics menu used, available","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfDatatype-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Clifro Datatype Object — cfDatatype-class","text":"cfDatatype object","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfDatatype-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Clifro Datatype Object — cfDatatype-class","text":"object inheriting cfDatatype class created constructor function cf_datatype. function allows user choose datatype(s) interactively (arguments given), create datatypes programmatically tree menu nodes known priori (see examples). function uses nodes, check box combo box options CliFlo can viewed datatype selection page.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfDatatype-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Clifro Datatype Object — cfDatatype-class","text":"'public' user (see examples) Reefton Ews station data available. Currently clifro support datatypes special datasets (Ten minute, Tier2, Virtual Climate, Lysimeter) upper air measurements radiosondes wind radar.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/cfDatatype-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Clifro Datatype Object — cfDatatype-class","text":"","code":"if (FALSE) { # Select the surface wind datatype manually (unknown tree nodes) hourly.wind.dt = cf_datatype() #  2  --> Datatype:        Wind #  1  --> Datatype 2:      Surface Wind #  2  --> Options:         Hourly Wind # (2) --> Another option:  No #  3  --> Units:           Knots hourly.wind.dt  # Or select the datatype programatically (using the selections seen above) hourly.wind.dt = cf_datatype(2, 1, 2, 3) hourly.wind.dt }"},{"path":"https://docs.ropensci.org/clifro/reference/cfStation-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The Clifro Station Object — cfStation-class","title":"The Clifro Station Object — cfStation-class","text":"Create cfStation object containing station information one CliFlo stations.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfStation-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Clifro Station Object — cfStation-class","text":"","code":"cf_station(...)"},{"path":"https://docs.ropensci.org/clifro/reference/cfStation-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Clifro Station Object — cfStation-class","text":"... comma separated agent numbers","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfStation-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Clifro Station Object — cfStation-class","text":"cfStation object","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfStation-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Clifro Station Object — cfStation-class","text":"cfStation object created constructor function cf_station. unique agent numbers stations required create cfStation object using cf_station function. rest station information including name, network agent ID, start end dates, coordinates, well data scraped CliFlo. function used agent numbers already known. help creating cfStation objects agent numbers unknown see cf_find_station function.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/cfStation-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Clifro Station Object — cfStation-class","text":"","code":"if (FALSE) { # Create a cfStation object for the Leigh 1 and 2 Ews stations leigh.st = cf_station(1339, 1340) leigh.st  # Note, this can also be achieved using the '+' operator leigh.st = cf_station(1339) + cf_station(1340) leigh.st  # Add another column showing how long the stations have been open for leigh.df = as(leigh.st, \"data.frame\") leigh.df$ndays = with(leigh.df, round(end - start)) leigh.df  # Save the stations to the current working directory as a KML to visualise # the station locations cf_save_kml(leigh.st) }"},{"path":"https://docs.ropensci.org/clifro/reference/cfUser-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The Clifro User Object — cfUser-class","title":"The Clifro User Object — cfUser-class","text":"Create cfUser object allow user log CliFlo R  build query.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfUser-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Clifro User Object — cfUser-class","text":"","code":"cf_user(username = \"public\", password = character())"},{"path":"https://docs.ropensci.org/clifro/reference/cfUser-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Clifro User Object — cfUser-class","text":"username character string used cliflo username password character string used cliflo password","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfUser-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Clifro User Object — cfUser-class","text":"cfUser object","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfUser-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Clifro User Object — cfUser-class","text":"object inheriting cfUser class created constructor function cf_user. user must active subscription cliflo order create valid object, unless 'public' user sought. Visit https://cliflo.niwa.co.nz/ information subscribe cliflo.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cfUser-class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Clifro User Object — cfUser-class","text":"'public' user (see examples) Reefton Ews station data available.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/cfUser-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Clifro User Object — cfUser-class","text":"","code":"if (FALSE) { public.cfuser = cf_user(username = \"public\") public.cfuser }"},{"path":"https://docs.ropensci.org/clifro/reference/cf_curl_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Store curl options for use within clifro — cf_curl_opts","title":"Store curl options for use within clifro — cf_curl_opts","text":"cf_curl_opts function stores specific curl options used clifro queries.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_curl_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store curl options for use within clifro — cf_curl_opts","text":"","code":"cf_curl_opts(..., .opts = list())"},{"path":"https://docs.ropensci.org/clifro/reference/cf_curl_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store curl options for use within clifro — cf_curl_opts","text":"... name-value pairs passed RCurl curlOptions .opts named list CURLOptions object passed RCurl curlOptions","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_curl_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Store curl options for use within clifro — cf_curl_opts","text":"","code":"if (FALSE) { # Specify options for use in all the curl handles created in clifro cf_curl_opts(.opts = list(proxy = \"http://xxxxx.yyyy.govt.nz:8080\",                           proxyusername  = \"uid\",                           proxypassword  = \"pwd\",                           ssl.verifypeer = FALSE)) # Or alternatively: cf_curl_opts(proxy = \"http://xxxxx.yyyy.govt.nz:8080\",              proxyusername  = \"uid\",              proxypassword  = \"pwd\",              ssl.verifypeer = FALSE) }"},{"path":"https://docs.ropensci.org/clifro/reference/cf_find_station.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for Clifro Stations — cf_find_station","title":"Search for Clifro Stations — cf_find_station","text":"Search clifro stations based name, region, location network number, return cfStation object.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_find_station.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Clifro Stations — cf_find_station","text":"","code":"cf_find_station(   ...,   search = c(\"name\", \"region\", \"network\", \"latlong\"),   datatype,   combine = c(\"all\", \"any\"),   status = c(\"open\", \"closed\", \"all\") )"},{"path":"https://docs.ropensci.org/clifro/reference/cf_find_station.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Clifro Stations — cf_find_station","text":"... arguments pass search, differ depending search. search one name, network, region latlong indicating type search conducted. datatype cfDatatype object search based datatypes. combine character string \"\" \"\" indicating stations contain selected datatypes search based datatypes. status character string indicating \"open\", \"closed\" \"\" stations returned search.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_find_station.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for Clifro Stations — cf_find_station","text":"cfStation object","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_find_station.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for Clifro Stations — cf_find_station","text":"cf_find_station function convenience function finding CliFlo stations R. uses CliFlo Find Stations page searching, therefore means stations stored within clifro. datatype missing search conducted without reference datatypes. supplied search return stations supplied datatypes, depending combine. default behaviour search stations based pattern matching station name return open stations. latlong search type used function expects named arguments names (partially) matching latitude, longitude radius. arguments passed without names must order latitude, longitude radius (see examples).","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_find_station.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search for Clifro Stations — cf_find_station","text":"Since searching done CliFlo obvious restrictions. Unfortunately pattern matching station name provide functionality regular expressions, allow simultaneous searches although clifro provide extra functionality, see 'query Search' example .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/cf_find_station.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for Clifro Stations — cf_find_station","text":"","code":"if (FALSE) { # Station Name Search ------------------------------------------------------ # Return all open stations with 'island' in the name (pattern match search) # Note this example uses all the defaults  island_st = cf_find_station(\"island\") island_st  # Region Search ------------------------------------------------------------ # Return all the closed stations from Queenstown (using partial matching)  queenstown.st = cf_find_station(\"queen\", search = \"region\", status = \"closed\") queenstown.st  # Long/Lat Search ---------------------------------------------------------- # Return all open stations within a 10km radius of the Beehive in Wellington # From Wikipedia: latitude 41.2784 S, longitude 174.7767 E  beehive.st = cf_find_station(lat = -41.2784, long = 174.7767, rad = 10,                              search = \"latlong\") beehive.st  # Network ID Search -------------------------------------------------------- # Return all stations that share A42 in their network ID  A42.st = cf_find_station(\"A42\", search = \"network\", status = \"all\") A42.st  # Using Datatypes in the Search -------------------------------------------- # Is the Reefton EWS station open and does it collect daily rain and/or wind # data?  # First, create the daily rain and wind datatypes daily.dt = cf_datatype(c(2, 3), c(1, 1), list(4, 1), c(1, NA)) daily.dt  # Then combine into the search. This will only return stations where at least # one datatype is available. cf_find_station(\"reefton EWS\", datatype = daily.dt)  # Yes  # OR Query Search ---------------------------------------------------------- # Return all stations sharing A42 in their network ID *or* all the open # stations within 10km of the Beehive in Wellington (note this is not # currently available as a single query in CliFlo).  cf_find_station(\"A42\", search = \"network\", status = \"all\") + cf_find_station(lat = -41.2784, long = 174.7767, rad = 10,                 search = \"latlong\")  # Note these are all ordered by open stations, then again by their end dates }"},{"path":"https://docs.ropensci.org/clifro/reference/cf_last_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Last Query Result from CliFlo — cf_last_query","title":"Retrieve Last Query Result from CliFlo — cf_last_query","text":"Retrieve last query submitted CliFlo instead querying database losing subscription rows.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_last_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Last Query Result from CliFlo — cf_last_query","text":"","code":"cf_last_query()"},{"path":"https://docs.ropensci.org/clifro/reference/cf_last_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Last Query Result from CliFlo — cf_last_query","text":"function back clifro query submitted data returned assigned, inadvertently deleted. saves user resubmitting queries using rows subscription needed.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_last_query.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve Last Query Result from CliFlo — cf_last_query","text":"data last query saved clifro.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_last_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Last Query Result from CliFlo — cf_last_query","text":"","code":"if (FALSE) { # Query CliFlo for wind at Reefton Ews cf_query(cf_user(), cf_datatype(2, 1, 1, 1), cf_station(), \"2012-01-01 00\")  # Oops! Forgot to assign it to a variable... reefton.wind = cf_last_query() reefton.wind }"},{"path":"https://docs.ropensci.org/clifro/reference/cf_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Data from the National Climate Database — cf_query","title":"Retrieve Data from the National Climate Database — cf_query","text":"Query National Climate Database via CliFlo based clifro user selected datatypes, stations dates.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Data from the National Climate Database — cf_query","text":"","code":"cf_query(   user,   datatype,   station,   start_date,   end_date = now(tz),   date_format = \"ymd_h\",   tz = \"Pacific/Auckland\",   output_tz = c(\"local\", \"NZST\", \"UTC\"),   quiet = FALSE )"},{"path":"https://docs.ropensci.org/clifro/reference/cf_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Data from the National Climate Database — cf_query","text":"user cfUser object. datatype cfDatatype object containing datatypes retrieved. station cfStation object containing stations datatypes retrieved . start_date character, Date POSIXt object indicating start date. character string supplied date format form yyyy-mm-dd-hh unless date_format specified. end_date start_date. Defaults now. date_format character string matching one \"ymd_h\", \"mdy_h\", \"ydm_h\" \"dmy_h\" representing lubridate-package date parsing function. tz timezone start end dates refer . Conversion Pacific/Auckland time done automatically with_tz function. Defaults \"Pacific/Auckland\". output_tz timezone output. can one either \"local\", \"UTC\", \"NZST\". quiet logical. TRUE function evaluates without displaying customary messages. Messages CliFlo still displayed.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Data from the National Climate Database — cf_query","text":"cfData cfDataList object.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Data from the National Climate Database — cf_query","text":"cf_query function used combine clifro user (cfUser), along desired datatypes (cfDatatype) stations (cfStation). query 'built ' using objects, along necessary dates. function uses data query National Climate Database via CliFlo web portal returns one many cfData objects one dataframe returned, cfDataList object one dataframe returned CliFlo. cfDataList returned, element list subclass cfData class, see 'cfData Subclasses' section.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_query.html","id":"cfdata-subclasses","dir":"Reference","previous_headings":"","what":"CfData Subclasses","title":"Retrieve Data from the National Climate Database — cf_query","text":"8 cfData subclasses returned cf_query depending datatype requested. subclasses default plot methods usability efficiency exploring plotting clifro data. following table summarises subclasses created, see also examples automatically create subclasses.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/cf_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Data from the National Climate Database — cf_query","text":"","code":"if (FALSE) { # Retrieve daily rain data from Reefton Ews daily.rain = cf_query(cf_user(\"public\"), cf_datatype(3, 1, 1),                       cf_station(), \"2012-01-01 00\") daily.rain  # returns a cfData object as there is only one datatype class(daily.rain) # 'cfRain' object - inherits 'cfData'  # Look up the help page for cfRain plot methods ?plot.cfRain  # Retrieve daily rain and wind data from Reefton Ews  daily.dts = cf_query(cf_user(\"public\"),                      cf_datatype(c(2, 3), c(1, 1), list(4, 1), c(1, NA)),                      cf_station(), \"2012-01-01 00\", \"2013-01-01 00\") daily.dts  # returns a cfDataList object as there is more than one datatype. Each # element of the cfDataList is an object inheriting from the cfData class. class(daily.dts)     # cfDataList class(daily.dts[1])  # cfRain class(daily.dts[2])  # cfWind  # Create a cfSunshine object (inherits cfData) # Retrieve daily global radiation data at Reefton Ews rad.data = cf_query(cf_user(), cf_datatype(5,2,1), cf_station(),                     \"2012-01-01 00\") rad.data  # The cf_query function automatically creates the appropriate cfData subclass class(rad.data)  # The advantage of having these subclasses is that it makes plotting very easy plot(rad.data) plot(daily.rain) plot(daily.rain, include_runoff = FALSE) plot(daily.dts) plot(daily.dts, 2) }"},{"path":"https://docs.ropensci.org/clifro/reference/cf_save_kml.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Clifro Station Information to a KML File — cf_save_kml","title":"Save Clifro Station Information to a KML File — cf_save_kml","text":"Save cfStation object information KML file.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_save_kml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Clifro Station Information to a KML File — cf_save_kml","text":"","code":"cf_save_kml(station, file_name = \"my_stations_\", file_path = \".\")"},{"path":"https://docs.ropensci.org/clifro/reference/cf_save_kml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Clifro Station Information to a KML File — cf_save_kml","text":"station cfStation object containing one stations file_name file name resulting KML file file_path file path resulting KML file","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_save_kml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Clifro Station Information to a KML File — cf_save_kml","text":"cf_save_kml function cfStation objects allow spatial visualisation selected stations. resulting KML file saved can opened programs like Google Earth (TM). resultant KML file station names locations shown green markers open red markers closed stations. agent numbers, network ID's date ranges contained within descriptions station. file name specified, unique names produced current R working directory.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/cf_save_kml.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Save Clifro Station Information to a KML File — cf_save_kml","text":".kml suffix appended automatically already present file_name argument.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/cf_save_kml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Clifro Station Information to a KML File — cf_save_kml","text":"","code":"if (FALSE) { # A selection of four Auckland region stations down the East Coast to the # upper Waitemata Harbour; Leigh 2 Ews, Warkworth Ews, Tiri Tiri Lighthouse # and Henderson my.stations = cf_station(17838, 1340, 1401, 12327) my.stations  # Save these stations to a KML file cf_save_kml(my.stations)  # Double click on the file to open with a default program (if available). All # the markers are green, indicating all these stations are open.  # Where is the subscription-free Reefton Ews station? cf_save_kml(cf_station(), file_name = \"reeftonEWS\")  # It's located in the sou'west quadrant of Reefton town, in the upper, western # part of the South Island, NZ.  # Find all the open and closed Christchurch stations (using partial matching) all.chch.st = cf_find_station(\"christ\", status = \"all\", search = \"region\")  # How many stations in total? nrow(all.chch.st)  # Save all the Christchurch stations cf_save_kml(all.chch.st, file_name = \"all_Chch_stations\") }"},{"path":"https://docs.ropensci.org/clifro/reference/clifro.html","id":null,"dir":"Reference","previous_headings":"","what":"From CliFlo to clifro: Enhancing The National Climate Database With R — clifro","title":"From CliFlo to clifro: Enhancing The National Climate Database With R — clifro","text":"Import data New Zealand's National Climate Database via CliFlo R exploring, analysis, plotting, exporting KML, CSV, software.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/clifro.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"From CliFlo to clifro: Enhancing The National Climate Database With R — clifro","text":"clifro package intended simplify process data extraction, formatting visualisation CliFlo web portal. requires user build query consisting 3 main components; user, datatype(s) station(s). combined using cf_query function sends query CliFlo database returns results can easily plotted using generic plotting functions. package requires user already current subscription National Climate Database unless public user sought, data limited Reefton Ews. Subscription free can obtained https://cliflo.niwa.co.nz/pls/niwp/wsubform.intro.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/clifro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"From CliFlo to clifro: Enhancing The National Climate Database With R — clifro","text":"","code":"if (FALSE) { # Create a public user ----------------------------------------------------  public.user = cf_user() # Defaults to \"public\" public.user  # Select datatypes --------------------------------------------------------  # 9am Surface wind (m/s) wind.dt = cf_datatype(2, 1, 4, 1)  # Daily Rain rain.dt = cf_datatype(3, 1, 1)  # Daily temperature extremes temp.dt = cf_datatype(4, 2, 2)  # Combine them together all.dts = wind.dt + rain.dt + temp.dt all.dts  # Select the Reefton Ews station ------------------------------------------  reefton.st = cf_station() reefton.st  # Submit the query --------------------------------------------------------  # Retrieve all data from ~ six months ago at 9am reefton.data = cf_query(public.user, all.dts, reefton.st,                         paste(as.Date(Sys.time()) - 182, \"9\")) reefton.data   # Plot the data -----------------------------------------------------------  # Plot the 9am surface wind data (first dataframe in the list) --- reefton.data[1]  # all identical - although passed to different methods plot(reefton.data)    #plot,cfDataList,missing-method plot(reefton.data, 1) #plot,cfDataList,numeric-method plot(reefton.data[1]) #plot,cfData,missing-method --> plot,cfWind,missing-method  speed_plot(reefton.data) direction_plot(reefton.data)  # Plot the daily rain data (second dataframe in the list) --- reefton.data[2]  # With runoff and soil deficit plot(reefton.data, 2)  # Just plot amount of rain (mm) plot(reefton.data, 2, include_runoff = FALSE)  # Plot the hourly temperature data (third dataframe in the list) --- plot(reefton.data, 3)  # Pass an argument to ggplot2::theme library(ggplot2) # for element_text() plot(reefton.data, 3, text = element_text(size = 18)) }"},{"path":"https://docs.ropensci.org/clifro/reference/clifroAdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic Operators for Clifro Objects — +,cfStation,cfStation-method","title":"Arithmetic Operators for Clifro Objects — +,cfStation,cfStation-method","text":"operator allows add datatypes stations cfDatatype cfStation objects respectively.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/clifroAdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic Operators for Clifro Objects — +,cfStation,cfStation-method","text":"","code":"# S4 method for cfStation,cfStation +(e1, e2)  # S4 method for cfDatatype,cfDatatype +(e1, e2)"},{"path":"https://docs.ropensci.org/clifro/reference/clifroAdd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic Operators for Clifro Objects — +,cfStation,cfStation-method","text":"e1 cfDatatype cfStation object e2 object matching class e1","code":""},{"path":"https://docs.ropensci.org/clifro/reference/dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimension Attributes of a Clifro Object — dimnames,dataFrame-method","title":"Dimension Attributes of a Clifro Object — dimnames,dataFrame-method","text":"Retrieve dimensions dimension names dataFrame object.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension Attributes of a Clifro Object — dimnames,dataFrame-method","text":"","code":"# S4 method for dataFrame dimnames(x)  # S4 method for dataFrame dim(x)"},{"path":"https://docs.ropensci.org/clifro/reference/dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimension Attributes of a Clifro Object — dimnames,dataFrame-method","text":"x dataFrame object Specifically, dataFrame object cfStation  cfData object. functions provided user () familiar data.frame-type functions available use clifro objects.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfEarthTemp-missing-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Earth Temperatures — plot,cfEarthTemp,missing-method","title":"Plot Earth Temperatures — plot,cfEarthTemp,missing-method","text":"Plot earth temperature given depth (degrees celsius) time, chosen CliFlo station.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfEarthTemp-missing-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Earth Temperatures — plot,cfEarthTemp,missing-method","text":"","code":"# S4 method for cfEarthTemp,missing plot(   x,   y,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   scales = c(\"fixed\", \"free_x\", \"free_y\", \"free\"),   n_col = 1,   ... )"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfEarthTemp-missing-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Earth Temperatures — plot,cfEarthTemp,missing-method","text":"x cfEarthTemp object. y missing. ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . scales character string partially matching scales argument link[ggplot2]{facet_wrap} function. n_col number columns plots (default 1). ... arguments passed theme.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfEarthTemp-missing-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Earth Temperatures — plot,cfEarthTemp,missing-method","text":"","code":"if (FALSE) { # Retrieve public earth temperature data for the last 30 days at Reefton Ews # station, at a depth of 10cm  # Subtract 30 days from today's date to get the start date last_month = paste(as.character(Sys.Date() - 30), 0)  reefton_earth = cf_query(cf_user(), cf_datatype(4, 3, 2), cf_station(),                          start_date = last_month)  class(reefton_earth) # cfTemp object  # Plot the temperature data using the defaults plot(reefton_earth)  # Enlarge the text and add the observations as points library(ggplot2) # for element_text() and geom_point() plot(reefton_earth, ggtheme = \"bw\", text = element_text(size = 16)) +   geom_point(size = 3, shape = 1)  # Save the plot as a png to the current working directory library(ggplot2) # for ggsave() ggsave(\"my_earthTemp_plot.png\") }"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfPressure-missing-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Mean Sea Level Atmospheric Pressure — plot,cfPressure,missing-method","title":"Plot Mean Sea Level Atmospheric Pressure — plot,cfPressure,missing-method","text":"Plot MSL atmospheric pressure time.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfPressure-missing-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Mean Sea Level Atmospheric Pressure — plot,cfPressure,missing-method","text":"","code":"# S4 method for cfPressure,missing plot(   x,   y,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   scales = c(\"fixed\", \"free_x\", \"free_y\", \"free\"),   n_col = 1,   ... )"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfPressure-missing-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Mean Sea Level Atmospheric Pressure — plot,cfPressure,missing-method","text":"x cfPressure object. y missing. ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . scales character string partially matching scales argument link[ggplot2]{facet_wrap} function. n_col number columns plots (default 1). ... arguments passed theme.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfPressure-missing-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Mean Sea Level Atmospheric Pressure — plot,cfPressure,missing-method","text":"","code":"if (FALSE) { # Retrieve public hourly atmospheric pressure data for the last 30 days at # Reefton Ews station  # Subtract 30 days from today's date to get the start date last_month = paste(as.character(Sys.Date() - 30), 0)  reefton_pressure = cf_query(cf_user(), cf_datatype(7, 1, 1), cf_station(),                             start_date = last_month)  class(reefton_pressure) # cfPressure object  # Plot the atmospheric pressure data using the defaults plot(reefton_pressure)  # Enlarge the text and add the observations as points library(ggplot2) # for element_text() and geom_point() plot(reefton_pressure, ggtheme = \"bw\", text = element_text(size = 16)) +   geom_point(size = 3, shape = 1)  # Save the plot as a png to the current working directory library(ggplot2) # for ggsave() ggsave(\"my_pressure_plot.png\") }"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfRain-missing-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Rain Time series — plot,cfRain,missing-method","title":"Plot Rain Time series — plot,cfRain,missing-method","text":"Plot amount rainfall (mm) time, optional available soil water capacity runoff amounts (applicable).","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfRain-missing-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Rain Time series — plot,cfRain,missing-method","text":"","code":"# S4 method for cfRain,missing plot(   x,   y,   include_runoff = TRUE,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   scales = c(\"fixed\", \"free_x\", \"free_y\", \"free\"),   n_col = 1,   ... )"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfRain-missing-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Rain Time series — plot,cfRain,missing-method","text":"x cfRain object. y missing. include_runoff logical indicating whether plot soil moisture deficit runoff well rainfall, data available (default TRUE). ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . scales character string partially matching scales argument link[ggplot2]{facet_wrap} function. n_col number columns plots (default 1). ... arguments passed theme.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfRain-missing-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Rain Time series — plot,cfRain,missing-method","text":"rain event, amount runoff, , dependent much capacity soil available water. available water capacity left soil rain lead runoff event. include_runoff = TRUE, available water capacity plotted negative values runoff positive values signify negative relationship.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfRain-missing-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Rain Time series — plot,cfRain,missing-method","text":"","code":"if (FALSE) { # Retrieve public rain data for a month from CliFlo (at Reefton Ews station) reefton_rain = cf_query(cf_user(), cf_datatype(3, 1, 1), cf_station(),                         start_date = \"2012-08-01-00\",                         end_date = \"2012-09-01-00\")  class(reefton_rain) # cfRain object  # Plot the rain data using the defaults plot(reefton_rain)  # Change the ggtheme and enlarge the text library(ggplot2) # for element_text() plot(reefton_rain, ggtheme = \"bw\", text = element_text(size = 16))  # Save the plot as a png to the current working directory library(ggplot2) # for ggsave() ggsave(\"my_rain_plot.png\") }"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfScreenObs-missing-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Screen Observations — plot,cfScreenObs,missing-method","title":"Plot Screen Observations — plot,cfScreenObs,missing-method","text":"Plot temperature data screen observations (degrees celsius) time.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfScreenObs-missing-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Screen Observations — plot,cfScreenObs,missing-method","text":"","code":"# S4 method for cfScreenObs,missing plot(   x,   y,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   scales = c(\"fixed\", \"free_x\", \"free_y\", \"free\"),   n_col = 1,   ... )"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfScreenObs-missing-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Screen Observations — plot,cfScreenObs,missing-method","text":"x cfScreenObs object. y missing. ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . scales character string partially matching scales argument link[ggplot2]{facet_wrap} function. n_col number columns plots (default 1). ... arguments passed theme.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfScreenObs-missing-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Screen Observations — plot,cfScreenObs,missing-method","text":"Temperature data screen observations include air, wet bulb, temperature time measurement taken (dry bulb wet bulb respectively), dew point. dew point air temperature dew starts form. temperature given air parcel must cooled constant pressure constant water vapour content order saturation occur. resulting figure plots dry bulb, wet bulb dew point temperatures  scale, station.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfScreenObs-missing-method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot Screen Observations — plot,cfScreenObs,missing-method","text":"Screen Observation details.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfScreenObs-missing-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Screen Observations — plot,cfScreenObs,missing-method","text":"","code":"if (FALSE) { # Retrieve public temperature data from screen observations for the last week # at Reefton Ews station  # Subtract 7 days from today's date to get the start date last_week = paste(as.character(Sys.Date() - 7), 0)  reefton_screenobs = cf_query(cf_user(), cf_datatype(4, 1, 1), cf_station(),                              start_date = last_week)  class(reefton_screenobs) # cfScreenObs object  # Plot the temperature data using the defaults plot(reefton_screenobs)  # Enlarge the text and add the observations as points library(ggplot2) # for element_text() and geom_point() plot(reefton_screenobs, ggtheme = \"bw\", text = element_text(size = 16)) +   geom_point(size = 3, shape = 1)  # Save the plot as a png to the current working directory library(ggplot2) # for ggsave() ggsave(\"my_screenobs_plot.png\") }"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfSunshine-missing-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sunshine Hours — plot,cfSunshine,missing-method","title":"Plot Sunshine Hours — plot,cfSunshine,missing-method","text":"Plot duration accumulated bright sunshine hours time.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfSunshine-missing-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sunshine Hours — plot,cfSunshine,missing-method","text":"","code":"# S4 method for cfSunshine,missing plot(   x,   y,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   scales = c(\"fixed\", \"free_x\", \"free_y\", \"free\"),   n_col = 1,   ... )"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfSunshine-missing-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sunshine Hours — plot,cfSunshine,missing-method","text":"x cfSunshine object. y missing. ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . scales character string partially matching scales argument link[ggplot2]{facet_wrap} function. n_col number columns plots (default 1). ... arguments passed theme.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfSunshine-missing-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Sunshine Hours — plot,cfSunshine,missing-method","text":"","code":"if (FALSE) { # Retrieve public hourly sunshine data for the last 7 days at Reefton Ews # station  # Subtract 7 days from today's date to get the start date last_week = paste(as.character(Sys.Date() - 7), 0)  reefton_sun = cf_query(cf_user(), cf_datatype(5, 1, 2), cf_station(),                        start_date = last_week)  class(reefton_sun) # cfSunshine object  # Plot the temperature data using the defaults plot(reefton_sun)  # Enlarge the text and add the observations as points library(ggplot2) # for element_text() and geom_point() plot(reefton_sun, ggtheme = \"bw\", text = element_text(size = 16)) +   geom_point(size = 3, shape = 1)  # Save the plot as a png to the current working directory library(ggplot2) # for ggsave() ggsave(\"my_sunshine_plot.png\") }"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfTemp-missing-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Temperature Range — plot,cfTemp,missing-method","title":"Plot Temperature Range — plot,cfTemp,missing-method","text":"Plot minimum maximum temperature data given period (degrees celsius) time, chosen CliFlo station.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfTemp-missing-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Temperature Range — plot,cfTemp,missing-method","text":"","code":"# S4 method for cfTemp,missing plot(   x,   y,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   scales = c(\"fixed\", \"free_x\", \"free_y\", \"free\"),   n_col = 1,   ... )"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfTemp-missing-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Temperature Range — plot,cfTemp,missing-method","text":"x cfTemp object. y missing. ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . scales character string partially matching scales argument link[ggplot2]{facet_wrap} function. n_col number columns plots (default 1). ... arguments passed theme.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfTemp-missing-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Temperature Range — plot,cfTemp,missing-method","text":"plotting method shows temperature extremes grey region plot, black line indicating average temperature (available).","code":""},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfWind-missing-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Clifro Wind Objects — plot,cfWind,missing-method","title":"Plot Clifro Wind Objects — plot,cfWind,missing-method","text":"Various plot methods exploring wind speed direction patterns given CliFlo stations.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfWind-missing-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Clifro Wind Objects — plot,cfWind,missing-method","text":"","code":"# S4 method for cfWind,missing plot(   x,   y,   n_directions = 12,   n_speeds = 5,   speed_cuts = NULL,   col_pal = \"GnBu\",   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   n_col = 1,   ... )  # S4 method for cfWind,missing direction_plot(   x,   y,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   contours = 10,   n_col = 1,   ... )  # S4 method for cfDataList,missing direction_plot(x, y, ...)  # S4 method for cfDataList,numeric direction_plot(x, y, ...)  # S4 method for cfWind,missing speed_plot(   x,   y,   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   scales = c(\"fixed\", \"free_x\", \"free_y\", \"free\"),   n_col = 1,   ... )  # S4 method for cfDataList,missing speed_plot(x, y, ...)  # S4 method for cfDataList,numeric speed_plot(x, y, ...)"},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfWind-missing-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Clifro Wind Objects — plot,cfWind,missing-method","text":"x cfWind cfDataList object. y missing x .cfWind object, otherwise number indicating dataframe plot cfDataList (defaults 1). n_directions number direction bins plot (petals rose). number directions defaults 12. n_speeds number equally spaced wind speed bins plot. used spd_cuts NA (default 5). speed_cuts numeric vector containing cut points wind speed intervals, NA (default). col_pal character string indicating name RColorBrewer colour palette used plotting, see 'Theme Selection' . ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . n_col number columns plots (default 1). ... arguments passed theme. contours number contour lines draw (default 10). scales character string partially matching scales argument link[ggplot2]{facet_wrap} function.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfWind-missing-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Clifro Wind Objects — plot,cfWind,missing-method","text":"x cfDataList, default first datatype plotted unless y supplied.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfWind-missing-method.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot Clifro Wind Objects — plot,cfWind,missing-method","text":"x cfDataList object y refers clifro dataframe cfWind object passed another method, available. default plot method plots different windrose CliFlo station. direction_plot method plots wind direction contours time visualise temporal patterns wind directions. speed_plot method plots time series wind speeds +/- standard deviation region (applicable). Given value x-axis, ends density function along  y-axis constrained equal derivatives  direction_plot method. , contours direction = 0,  match contours direction = 360. @seealso plot,cfDataList,missing-method general   information default plotting cfData cfDataList   objects, links within. See cf_query creating   cfWind objects windrose plotting wind data.   Refer theme possible arguments pass   methods. summary,cfWind-method summarising wind   information CliFlo station.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfWind-missing-method.html","id":"theme-selection","dir":"Reference","previous_headings":"","what":"Theme Selection","title":"Plot Clifro Wind Objects — plot,cfWind,missing-method","text":"black white windroses may preferred plots used journal articles example, recommended ggthemes 'bw', 'linedraw', 'minimal' 'classic' col_pal 'Greys'. Otherwise, sequential RColorBrewer colour palettes recommended colour plots.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot-cfWind-missing-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Clifro Wind Objects — plot,cfWind,missing-method","text":"","code":"if (FALSE) { # Retrieve maximum wind gust data at the Reefton Ews station from CliFlo # (public data) reefton_wind = cf_query(cf_user(), cf_datatype(2, 2, 1, 1), cf_station(),                         start_date = \"2012-01-01-00\")  class(reefton_wind)  # Examples of the default plots --------------------------------------------  # Plot a windrose plot(reefton_wind)  # Plot the wind direction contours direction_plot(reefton_wind)  # Plot the wind speed time-series speed_plot(reefton_wind)  # Examples of changing the defaults ----------------------------------------  # Plot black and white windroses plot(reefton_wind, ggtheme = \"bw\", col_pal = \"Greys\") plot(reefton_wind, ggtheme = \"linedraw\", col_pal = \"Greys\") plot(reefton_wind, ggtheme = \"classic\", col_pal = \"Greys\") plot(reefton_wind, ggtheme = \"minimal\", col_pal = \"Greys\")  # Plot the wind directions using 20 contours and the ggtheme 'classic' direction_plot(reefton_wind, ggtheme = \"classic\", contours = 20)  # Enlarge all the text to 18pt library(ggplot2) # for element_text() and geom_point() direction_plot(reefton_wind, ggtheme = \"classic\", contours = 20,                text = element_text(size = 18))  # Include the actual observations in the plots direction_plot(reefton_wind) + geom_point(alpha = .2, size = 3)  speed_plot(reefton_wind, ggtheme = \"classic\", text = element_text(size = 16)) +   geom_point(shape = 1, size = 3) # or equivalently using base graphics: plot(reefton_wind$Date, reefton_wind$Speed, type = 'o',      xlab = NA, ylab = \"Daily max gust (m/s)\", las = 1, main = \"Reefton Ews\")  # Example of plotting a cfDataList ----------------------------------------- # Collect both surface wind run and hourly surface wind observations from # Reefton Ews reefton_list = cf_query(cf_user(), cf_datatype(2, 1, 1:2, 1),                         cf_station(), \"2012-01-01 00\", \"2012-02-01 00\")  reefton_list  class(reefton_list) #cfDataList  # Plot the first (default) dataframe plot(reefton_list) # Error - no wind directions for wind run datatypes # Try speed_plot instead speed_plot(reefton_list)  # Plot the second dataframe in the cfDataList plot(reefton_list, 2)           # identical to plot(reefton_list[2]) speed_plot(reefton_list, 2)     # identical to speed_plot(reefton_list[2]) direction_plot(reefton_list, 2) # identical to direction_plot(reefton_list[2])  # Save the ggplot externally -----------------------------------------------  # Save the plot as a png to the current working directory library(ggplot2) # for ggsave() ggsave(\"my_wind_plot.png\") }"},{"path":"https://docs.ropensci.org/clifro/reference/plot.cfDataList.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Clifro Plotting — plot.cfDataList","title":"Default Clifro Plotting — plot.cfDataList","text":"Plot clifro data based datatype.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/plot.cfDataList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Clifro Plotting — plot.cfDataList","text":"","code":"# S4 method for cfDataList,numeric plot(x, y, ...)  # S4 method for cfDataList,missing plot(x, y, ...)  # S4 method for cfOther,missing plot(x, y)"},{"path":"https://docs.ropensci.org/clifro/reference/plot.cfDataList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Clifro Plotting — plot.cfDataList","text":"x cfData cfDataList object. y missing cfData objects, number representing dataframe plot x cfDataList object. ... arguments passed onto different plotting methods. methods intended simplify data visualisation exploration CliFlo data. type plot determined type data output clifro query. methods plot individual plots CliFlo station (one query). x cfDataList, default first datatype plotted unless y supplied. following table links datatypes corresponding plot methods:","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfUser-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise User Information — summary,cfUser-method","title":"Summarise User Information — summary,cfUser-method","text":"Show subscription status clifro user","code":""},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfUser-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise User Information — summary,cfUser-method","text":"","code":"# S4 method for cfUser summary(object)"},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfUser-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise User Information — summary,cfUser-method","text":"object object class cfUser.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfWind-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Clifro Wind Data — summary,cfWind-method","title":"Summarise Clifro Wind Data — summary,cfWind-method","text":"summary method cfWind objects.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfWind-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Clifro Wind Data — summary,cfWind-method","text":"","code":"# S4 method for cfWind summary(object, calm_wind = 0)"},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfWind-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Clifro Wind Data — summary,cfWind-method","text":"object cfWind object. calm_wind single number containing wind speed considered calm.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfWind-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise Clifro Wind Data — summary,cfWind-method","text":"dataframe returned containing percentage calm days (wind speed >= calm_days), percentage variable days (wind speed = 990), quantiles empirical cumulative distribution functions CliFlo station wind data.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/summary-cfWind-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Clifro Wind Data — summary,cfWind-method","text":"","code":"if (FALSE) { # Retrieve maximum wind gust data at the Reefton Ews station from CliFlo # (public data) reefton_wind = cf_query(cf_user(), cf_datatype(2, 2, 1, 1), cf_station(),                         start_date = \"2012-01-01-00\")  class(reefton_wind) # cfWind object  # Summarise the information summary(reefton_wind) }"},{"path":"https://docs.ropensci.org/clifro/reference/valid_cfuser.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation Functions For The cfUser Class — valid_cfuser","title":"Validation Functions For The cfUser Class — valid_cfuser","text":"internal functions used cf_user constructor function ensure user valid subscription CliFlo.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/valid_cfuser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation Functions For The cfUser Class — valid_cfuser","text":"","code":"cf_login(object, ...)  cf_logout(object, msg = TRUE, ...)  valid_cfuser(object)"},{"path":"https://docs.ropensci.org/clifro/reference/valid_cfuser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation Functions For The cfUser Class — valid_cfuser","text":"object S4 object inherits cfUser class ... options passed GET POST functions. msg Display 'successful logout' message, defaults TRUE.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/valid_cfuser.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validation Functions For The cfUser Class — valid_cfuser","text":"cf_login initiates curl handle storing cookies current R session's temporary directory. POSTs user credentials CliFlo login page stores resultant h1 heading check string 'Info'. cookies kept future (immediate) use. cf_logout points curl handle existing cookie session initiated cf_login. reads header information cliflo logout page ensure HTTP error logs user cliflo deletes cookies. () called immediately cf_login function requiring login, using .exit ensure user still logged server, function call, reason. valid_cfuser validation function cfUser class uses  cf_login ensure credentials authenticated CliFlo server (cf_)logs immediately afterwards. also ensures user provides exactly one username password - except 'public' users.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/valid_cfuser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validation Functions For The cfUser Class — valid_cfuser","text":"","code":"if (FALSE) { cf_user(\"public\")                    # Returns a valid object cf_user(\"bad_name\", \"bad_password\")    # Bad Login }"},{"path":"https://docs.ropensci.org/clifro/reference/windrose.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Wind Rose — windrose","title":"Plot a Wind Rose — windrose","text":"Plot wind rose showing wind speed direction given facets using ggplot2.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/windrose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Wind Rose — windrose","text":"","code":"windrose(   speed,   direction,   facet,   n_directions = 12,   n_speeds = 5,   speed_cuts = NA,   col_pal = \"GnBu\",   ggtheme = c(\"grey\", \"gray\", \"bw\", \"linedraw\", \"light\", \"minimal\", \"classic\"),   legend_title = \"Wind Speed\",   calm_wind = 0,   variable_wind = 990,   n_col = 1,   ... )"},{"path":"https://docs.ropensci.org/clifro/reference/windrose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Wind Rose — windrose","text":"speed numeric vector wind speeds. direction numeric vector wind directions. facet character factor vector facets used plot various wind roses. n_directions number direction bins plot (petals rose). number directions defaults 12. n_speeds number equally spaced wind speed bins plot. used speed_cuts NA (default 5). speed_cuts numeric vector containing cut points wind speed intervals, NA (default). col_pal character string indicating name RColorBrewer colour palette used plotting, see 'Theme Selection' . ggtheme character string (partially) matching ggtheme used plotting, see 'Theme Selection' . legend_title character string used legend title. calm_wind direction wind considered calm. Following  convention National Weather Service, winds  direction 0 considered calm default. variable_wind numeric code variable winds (applicable). n_col number columns plots (default 1). ... arguments passed theme.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/windrose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Wind Rose — windrose","text":"ggplot object.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/windrose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a Wind Rose — windrose","text":"intended used stand-alone function wind dataset. different wind rose plotted level faceting variable coerced factor necessary. facets generally station data collected, seasons dates. Currently one faceting variable allowed passed facet_wrap formula ~facet. Note calm winds excluded wind rose.","code":""},{"path":"https://docs.ropensci.org/clifro/reference/windrose.html","id":"theme-selection","dir":"Reference","previous_headings":"","what":"Theme Selection","title":"Plot a Wind Rose — windrose","text":"black white wind roses may preferred plots used journal articles example, recommended ggthemes 'bw', 'linedraw', 'minimal' 'classic' col_pal 'Greys'. Otherwise, sequential RColorBrewer colour palettes recommended colour plots.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/reference/windrose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Wind Rose — windrose","text":"","code":"# Create some dummy wind data with predominant south to westerly winds, and # occasional yet higher wind speeds from the NE (not too dissimilar to # Auckland).  wind_df = data.frame(wind_speeds = c(rweibull(80, 2, 4), rweibull(20, 3, 9)),                      wind_dirs = c(rnorm(80, 135, 55), rnorm(20, 315, 35)) %% 360,                      station = rep(rep(c(\"Station A\", \"Station B\"), 2),                                    rep(c(40, 10), each = 2)))  # Plot a simple wind rose using all the defaults, ignoring any facet variable with(wind_df, windrose(wind_speeds, wind_dirs)) #> Error in position_stack(reverse = TRUE): could not find function \"position_stack\"  # Create custom speed bins, add a legend title, and change to a B&W theme with(wind_df, windrose(wind_speeds, wind_dirs,                        speed_cuts = c(3, 6, 9, 12),                        legend_title = \"Wind Speed\\n(m/s)\",                        legend.title.align = .5,                        ggtheme = \"bw\",                        col_pal = \"Greys\")) #> Error in position_stack(reverse = TRUE): could not find function \"position_stack\"  # Note that underscore-separated arguments come from the windrose method, and # period-separated arguments come from ggplot2::theme().  # Include a facet variable with one level with(wind_df, windrose(wind_speeds, wind_dirs, \"Artificial Auckland Wind\")) #> Error in position_stack(reverse = TRUE): could not find function \"position_stack\"  # Plot a windrose for each level of the facet variable (each station) with(wind_df, windrose(wind_speeds, wind_dirs, station, n_col = 2)) #> Error in position_stack(reverse = TRUE): could not find function \"position_stack\"  if (FALSE) { # Save the plot as a png to the current working directory library(ggplot2) ggsave(\"my_windrose.png\") }"},{"path":[]},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-2-6","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"clifro 3.2.6","text":"Issue #32","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"minor-improvements-3-2-5","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"clifro 3.2.5 (18-Mar-2021)","text":"cf_query() function now includes output_tz argument allows choose output timezone either “local” (default), “NZST”, “UTC” (issue #28). ##Bug Fixes * Issue #27","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"dependencies-3-2-5","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"clifro 3.2.5 (18-Mar-2021)","text":"Remove RCurl dependency entirely clifro replace modern httr / rvest / xml2 packages.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-32-3-01-sep-2020","dir":"Changelog","previous_headings":"","what":"clifro 3.2-3 (01-Sep-2020)","title":"clifro 3.2-3 (01-Sep-2020)","text":"CRAN release: 2020-09-01","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-2-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.2-3 (01-Sep-2020)","text":"Issue #21. Issue #22. Fixed broken links documentation. Fixed minor timezone bug cf_station.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"dependencies-3-2-3","dir":"Changelog","previous_headings":"","what":"Dependencies","title":"clifro 3.2-3 (01-Sep-2020)","text":"Remove dependency suggestion ggmap. ggmap library used ‘Working clifro Stations’ vignette show plot map station locations R. section vignette removed.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-32-2-20-mar-2019","dir":"Changelog","previous_headings":"","what":"clifro 3.2-2 (20-Mar-2019)","title":"clifro 3.2-2 (20-Mar-2019)","text":"CRAN release: 2019-03-20","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-2-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.2-2 (20-Mar-2019)","text":"cf_find_station function longer returns error searching CliFlo stations based proximity geographical coordinate (using ‘latlon’ search) using datatype (fixes issue #21).","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-32-1-08-jan-2019","dir":"Changelog","previous_headings":"","what":"clifro 3.2-1 (08-Jan-2019)","title":"clifro 3.2-1 (08-Jan-2019)","text":"CRAN release: 2019-01-08","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-2-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.2-1 (08-Jan-2019)","text":"Fixed issue #21","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-32-0-25-jul-2018","dir":"Changelog","previous_headings":"","what":"clifro 3.2-0 (25-Jul-2018)","title":"clifro 3.2-0 (25-Jul-2018)","text":"CRAN release: 2018-07-25","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-2-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.2-0 (25-Jul-2018)","text":"Fixed issue #14 Updated links Rd files ensure warnings building package. clifro longer tests whether Google Earth installed.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"minor-improvements-3-2-0","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"clifro 3.2-0 (25-Jul-2018)","text":"clifro troubles installation certain operating systems due XML package (issue #19). XML selectr dependencies now replaced xml2 magrittr. Updated vignettes.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-31-5-04-oct-2017","dir":"Changelog","previous_headings":"","what":"clifro 3.1-5 (04-Oct-2017)","title":"clifro 3.1-5 (04-Oct-2017)","text":"CRAN release: 2017-10-05","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-1-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.1-5 (04-Oct-2017)","text":"Fixed issue #14","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-31-4-21-april-2017","dir":"Changelog","previous_headings":"","what":"clifro 3.1-4 (21-April-2017)","title":"clifro 3.1-4 (21-April-2017)","text":"CRAN release: 2017-04-21","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-1-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.1-4 (21-April-2017)","text":"Fixed issue #13","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-31-3-16-march-2017","dir":"Changelog","previous_headings":"","what":"clifro 3.1-3 (16-March-2017)","title":"clifro 3.1-3 (16-March-2017)","text":"CRAN release: 2017-03-16","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"updates-3-1-3","dir":"Changelog","previous_headings":"","what":"Updates","title":"clifro 3.1-3 (16-March-2017)","text":"Reorganise package structure include README figures shipped package upcoming version R can compile locally.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-31-2-09-january-2017","dir":"Changelog","previous_headings":"","what":"clifro 3.1-2 (09-January-2017)","title":"clifro 3.1-2 (09-January-2017)","text":"CRAN release: 2017-01-09","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-1-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.1-2 (09-January-2017)","text":"Fixed issue #7","code":""},{"path":[]},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"minor-improvements-3-1-0","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"clifro 3.1-0 (14-December-2016)","text":"Curl options can now passed curl handles initiated clifro. means curl options overwritten every time new clifro function called. Curl options passed clifro using cf_curl_opts function, passed directly RCurl::curlOptions() function.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-3-1-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 3.1-0 (14-December-2016)","text":"Requesting combined datatypes now works (issue #4). Note default plot method datatype essentially combinations datatypes. Fix bug hung R datatype without rows requested – Fixed issue #6","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-30-0-10-august-2016","dir":"Changelog","previous_headings":"","what":"clifro 3.0-0 (10-August-2016)","title":"clifro 3.0-0 (10-August-2016)","text":"CRAN release: 2016-08-11","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"minor-improvements-3-0-0","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"clifro 3.0-0 (10-August-2016)","text":"Allow expressions legend title windrose","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"major-bug-fixes-3-0-0","dir":"Changelog","previous_headings":"","what":"Major Bug Fixes","title":"clifro 3.0-0 (10-August-2016)","text":"HTTPS required due recent change NIWA’s proxy server – Fixed Issue #3. result older versions clifro don’t seem work Windows due SSL certificate problem.","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"minor-bug-fixes-3-0-0","dir":"Changelog","previous_headings":"","what":"Minor Bug Fixes","title":"clifro 3.0-0 (10-August-2016)","text":"cf_find_station correctly gives distances instead longitudes","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-24-1-15-january-2016","dir":"Changelog","previous_headings":"","what":"clifro 2.4-1 (15-January-2016)","title":"clifro 2.4-1 (15-January-2016)","text":"CRAN release: 2016-02-22","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"minor-improvements-2-4-1","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"clifro 2.4-1 (15-January-2016)","text":"Update citation information","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-24-0-05-march-2015","dir":"Changelog","previous_headings":"","what":"clifro 2.4-0 (05-March-2015)","title":"clifro 2.4-0 (05-March-2015)","text":"CRAN release: 2015-03-04","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"bug-fixes-2-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"clifro 2.4-0 (05-March-2015)","text":"Bug fixed subsetting cfStation using [","code":""},{"path":"https://docs.ropensci.org/clifro/news/index.html","id":"clifro-223-04-march-2015","dir":"Changelog","previous_headings":"","what":"clifro 2.2.3 (04-March-2015)","title":"clifro 2.2.3 (04-March-2015)","text":"Start using NEWS document changes clifro","code":""}]
